"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å FASTA —Ñ–∞–π–ª–∞–º–∏
"""
import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É src –≤ –ø—É—Ç—å Python
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from fasta_reader import FastaReader

def demonstrate_fasta_reader(file_path):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å FASTA —Ñ–∞–π–ª–æ–º"""
    print(f"\n=== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {os.path.basename(file_path)} ===")
    
    try:
        reader = FastaReader(file_path)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
        is_valid = reader.is_valid_fasta()
        print(f"‚úÖ –§–∞–π–ª —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É FASTA: {is_valid}")
        
        if not is_valid:
            print("‚ùå –§–∞–π–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            return
        
        # –ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
        sequence_count = 0
        total_length = 0
        
        print("\nüìä –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ñ–∞–π–ª–µ:")
        print("-" * 50)
        
        start_time = time.time()
        
        for seq in reader.read_sequences():
            sequence_count += 1
            total_length += len(seq)
            
            print(f"üéØ {sequence_count}. {seq.header}")
            print(f"   üìè –î–ª–∏–Ω–∞: {len(seq)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"   üî§ –¢–∏–ø: {seq.get_alphabet()}")
            print(f"   üëÄ –ü—Ä–µ—Ñ–∏–∫—Å: {seq.sequence[:30]}...")
            print()
        
        end_time = time.time()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("=" * 50)
        print(f"üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   –í—Å–µ–≥–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: {sequence_count}")
        print(f"   –û–±—â–∞—è –¥–ª–∏–Ω–∞: {total_length} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {end_time - start_time:.2f} —Å–µ–∫—É–Ω–¥")
        if sequence_count > 0:
            print(f"   –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞: {total_length/sequence_count:.1f} —Å–∏–º–≤–æ–ª–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üî¨ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø FASTA READER")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ –æ—Ç –ø–∞–ø–∫–∏ demo)
    test_files = [
        "test_insulin.fasta"    # –ù–∞—à –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –∏–Ω—Å—É–ª–∏–Ω–æ–º
    ]
    
    for file_name in test_files:
        file_path = os.path.join(os.path.dirname(__file__), file_name)
        
        if os.path.exists(file_path):
            demonstrate_fasta_reader(file_path)
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª {file_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")

if __name__ == "__main__":
    main()