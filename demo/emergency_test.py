"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∞
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É src –≤ –ø—É—Ç—å Python
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from fasta_reader import FastaReader

def emergency_test():
    print("üöÄ –≠–ö–°–¢–†–ï–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    test_files = [
        "simple_test.fasta",    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        "test_insulin.fasta"    # –¢–≤–æ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    ]
    
    for file_name in test_files:
        file_path = os.path.join(os.path.dirname(__file__), file_name)
        
        print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª: {file_name}")
        print(f"üìÅ –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: {file_path}")
        print(f"üìä –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(file_path)}")
        
        if not os.path.exists(file_path):
            print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            continue
        
        try:
            reader = FastaReader(file_path)
            
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            sequences = list(reader.read_sequences())
            
            print(f"‚úÖ –£–°–ü–ï–•! –ü—Ä–æ—á–∏—Ç–∞–Ω–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: {len(sequences)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            for i, seq in enumerate(sequences, 1):
                print(f"   {i}. {seq.header}")
                print(f"      –î–ª–∏–Ω–∞: {len(seq)}")
                print(f"      –¢–∏–ø: {seq.get_alphabet()}")
                print(f"      –ù–∞—á–∞–ª–æ: {seq.sequence[:20]}...")
                
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")

if __name__ == "__main__":
    emergency_test()